//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MAF.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TextNotificationEntities : DbContext
    {
        public TextNotificationEntities()
            : base("name=TextNotificationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<string> GetSecurityToken()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSecurityToken");
        }
    
        public virtual int InsertTextLog(string accountNumber, string textNumber, string textLogType, string textLogEntry, string textLogUserName)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var textNumberParameter = textNumber != null ?
                new ObjectParameter("TextNumber", textNumber) :
                new ObjectParameter("TextNumber", typeof(string));
    
            var textLogTypeParameter = textLogType != null ?
                new ObjectParameter("TextLogType", textLogType) :
                new ObjectParameter("TextLogType", typeof(string));
    
            var textLogEntryParameter = textLogEntry != null ?
                new ObjectParameter("TextLogEntry", textLogEntry) :
                new ObjectParameter("TextLogEntry", typeof(string));
    
            var textLogUserNameParameter = textLogUserName != null ?
                new ObjectParameter("TextLogUserName", textLogUserName) :
                new ObjectParameter("TextLogUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTextLog", accountNumberParameter, textNumberParameter, textLogTypeParameter, textLogEntryParameter, textLogUserNameParameter);
        }
    
        public virtual int OptInSubscriber(string accountNumber, string textNumber, string optInIPAddress, string createdBy)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var textNumberParameter = textNumber != null ?
                new ObjectParameter("TextNumber", textNumber) :
                new ObjectParameter("TextNumber", typeof(string));
    
            var optInIPAddressParameter = optInIPAddress != null ?
                new ObjectParameter("OptInIPAddress", optInIPAddress) :
                new ObjectParameter("OptInIPAddress", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OptInSubscriber", accountNumberParameter, textNumberParameter, optInIPAddressParameter, createdByParameter);
        }
    
        public virtual int OptOutSubscriber(Nullable<int> subscriberId, string optOutIPAddress, string modifiedBy)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var optOutIPAddressParameter = optOutIPAddress != null ?
                new ObjectParameter("OptOutIPAddress", optOutIPAddress) :
                new ObjectParameter("OptOutIPAddress", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OptOutSubscriber", subscriberIdParameter, optOutIPAddressParameter, modifiedByParameter);
        }
    
        public virtual int SaveSecurityToken(string securityToken, Nullable<int> tokenExpireInMinutes)
        {
            var securityTokenParameter = securityToken != null ?
                new ObjectParameter("SecurityToken", securityToken) :
                new ObjectParameter("SecurityToken", typeof(string));
    
            var tokenExpireInMinutesParameter = tokenExpireInMinutes.HasValue ?
                new ObjectParameter("TokenExpireInMinutes", tokenExpireInMinutes) :
                new ObjectParameter("TokenExpireInMinutes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveSecurityToken", securityTokenParameter, tokenExpireInMinutesParameter);
        }
    
        public virtual ObjectResult<GetSubscriberByAccount_Result> GetSubscriberByAccount(string accountNumber)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscriberByAccount_Result>("GetSubscriberByAccount", accountNumberParameter);
        }
    
        public virtual ObjectResult<string> SBTGetSecurityToken()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SBTGetSecurityToken");
        }
    
        public virtual ObjectResult<SBTGetSubscriberByAccount_Result> SBTGetSubscriberByAccount(string accountNumber)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SBTGetSubscriberByAccount_Result>("SBTGetSubscriberByAccount", accountNumberParameter);
        }
    
        public virtual int SBTInsertTextLog(string accountNumber, string textNumber, string textLogType, string textLogEntry, string textLogUserName)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var textNumberParameter = textNumber != null ?
                new ObjectParameter("TextNumber", textNumber) :
                new ObjectParameter("TextNumber", typeof(string));
    
            var textLogTypeParameter = textLogType != null ?
                new ObjectParameter("TextLogType", textLogType) :
                new ObjectParameter("TextLogType", typeof(string));
    
            var textLogEntryParameter = textLogEntry != null ?
                new ObjectParameter("TextLogEntry", textLogEntry) :
                new ObjectParameter("TextLogEntry", typeof(string));
    
            var textLogUserNameParameter = textLogUserName != null ?
                new ObjectParameter("TextLogUserName", textLogUserName) :
                new ObjectParameter("TextLogUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTInsertTextLog", accountNumberParameter, textNumberParameter, textLogTypeParameter, textLogEntryParameter, textLogUserNameParameter);
        }
    
        public virtual int SBTOptInSubscriber(string accountNumber, string textNumber, string optInIPAddress, string createdBy, Nullable<bool> isPaymentReminderNotification, Nullable<bool> isPaymentConfirmationNotification, Nullable<bool> isPayByTextNotification, Nullable<bool> isCommunicationByTextNotification)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var textNumberParameter = textNumber != null ?
                new ObjectParameter("TextNumber", textNumber) :
                new ObjectParameter("TextNumber", typeof(string));
    
            var optInIPAddressParameter = optInIPAddress != null ?
                new ObjectParameter("OptInIPAddress", optInIPAddress) :
                new ObjectParameter("OptInIPAddress", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isPaymentReminderNotificationParameter = isPaymentReminderNotification.HasValue ?
                new ObjectParameter("IsPaymentReminderNotification", isPaymentReminderNotification) :
                new ObjectParameter("IsPaymentReminderNotification", typeof(bool));
    
            var isPaymentConfirmationNotificationParameter = isPaymentConfirmationNotification.HasValue ?
                new ObjectParameter("IsPaymentConfirmationNotification", isPaymentConfirmationNotification) :
                new ObjectParameter("IsPaymentConfirmationNotification", typeof(bool));
    
            var isPayByTextNotificationParameter = isPayByTextNotification.HasValue ?
                new ObjectParameter("IsPayByTextNotification", isPayByTextNotification) :
                new ObjectParameter("IsPayByTextNotification", typeof(bool));
    
            var isCommunicationByTextNotificationParameter = isCommunicationByTextNotification.HasValue ?
                new ObjectParameter("IsCommunicationByTextNotification", isCommunicationByTextNotification) :
                new ObjectParameter("IsCommunicationByTextNotification", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTOptInSubscriber", accountNumberParameter, textNumberParameter, optInIPAddressParameter, createdByParameter, isPaymentReminderNotificationParameter, isPaymentConfirmationNotificationParameter, isPayByTextNotificationParameter, isCommunicationByTextNotificationParameter);
        }
    
        public virtual int SBTOptOutSubscriber(Nullable<int> subscriberId, string optOutIPAddress, string modifiedBy)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var optOutIPAddressParameter = optOutIPAddress != null ?
                new ObjectParameter("OptOutIPAddress", optOutIPAddress) :
                new ObjectParameter("OptOutIPAddress", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTOptOutSubscriber", subscriberIdParameter, optOutIPAddressParameter, modifiedByParameter);
        }
    
        public virtual int SBTSaveSecurityToken(string securityToken, Nullable<int> tokenExpireInMinutes)
        {
            var securityTokenParameter = securityToken != null ?
                new ObjectParameter("SecurityToken", securityToken) :
                new ObjectParameter("SecurityToken", typeof(string));
    
            var tokenExpireInMinutesParameter = tokenExpireInMinutes.HasValue ?
                new ObjectParameter("TokenExpireInMinutes", tokenExpireInMinutes) :
                new ObjectParameter("TokenExpireInMinutes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTSaveSecurityToken", securityTokenParameter, tokenExpireInMinutesParameter);
        }
    
        public virtual ObjectResult<SBTGetAdditionalNotifications_Result> SBTGetAdditionalNotifications(string accountNumber)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SBTGetAdditionalNotifications_Result>("SBTGetAdditionalNotifications", accountNumberParameter);
        }
    
        public virtual int SBTUpdateAdditionalNotification(Nullable<int> subscriberId, Nullable<bool> isPaymentReminderNotification, Nullable<bool> isPaymentConfirmationNotification, Nullable<bool> isPayByTextNotification, Nullable<bool> isCommunicationByTextNotification)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var isPaymentReminderNotificationParameter = isPaymentReminderNotification.HasValue ?
                new ObjectParameter("IsPaymentReminderNotification", isPaymentReminderNotification) :
                new ObjectParameter("IsPaymentReminderNotification", typeof(bool));
    
            var isPaymentConfirmationNotificationParameter = isPaymentConfirmationNotification.HasValue ?
                new ObjectParameter("IsPaymentConfirmationNotification", isPaymentConfirmationNotification) :
                new ObjectParameter("IsPaymentConfirmationNotification", typeof(bool));
    
            var isPayByTextNotificationParameter = isPayByTextNotification.HasValue ?
                new ObjectParameter("IsPayByTextNotification", isPayByTextNotification) :
                new ObjectParameter("IsPayByTextNotification", typeof(bool));
    
            var isCommunicationByTextNotificationParameter = isCommunicationByTextNotification.HasValue ?
                new ObjectParameter("IsCommunicationByTextNotification", isCommunicationByTextNotification) :
                new ObjectParameter("IsCommunicationByTextNotification", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTUpdateAdditionalNotification", subscriberIdParameter, isPaymentReminderNotificationParameter, isPaymentConfirmationNotificationParameter, isPayByTextNotificationParameter, isCommunicationByTextNotificationParameter);
        }
    
        public virtual int SBTSaveCallBackUrlInfo(string title, string code, string shortCode, string message, string phone, string carrier, string keyword, string group, string note, string uniqueId, string default_Keyword)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var shortCodeParameter = shortCode != null ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var groupParameter = group != null ?
                new ObjectParameter("Group", group) :
                new ObjectParameter("Group", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var uniqueIdParameter = uniqueId != null ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(string));
    
            var default_KeywordParameter = default_Keyword != null ?
                new ObjectParameter("Default_Keyword", default_Keyword) :
                new ObjectParameter("Default_Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTSaveCallBackUrlInfo", titleParameter, codeParameter, shortCodeParameter, messageParameter, phoneParameter, carrierParameter, keywordParameter, groupParameter, noteParameter, uniqueIdParameter, default_KeywordParameter);
        }
    
        public virtual int SBTSaveStatusUrlInfo(string code, string message, string sendTo, string orgCode, string status, string ticket, string note, string uniqueId, string messageCategory, string messageSubCategory)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var sendToParameter = sendTo != null ?
                new ObjectParameter("SendTo", sendTo) :
                new ObjectParameter("SendTo", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var ticketParameter = ticket != null ?
                new ObjectParameter("Ticket", ticket) :
                new ObjectParameter("Ticket", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var uniqueIdParameter = uniqueId != null ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(string));
    
            var messageCategoryParameter = messageCategory != null ?
                new ObjectParameter("MessageCategory", messageCategory) :
                new ObjectParameter("MessageCategory", typeof(string));
    
            var messageSubCategoryParameter = messageSubCategory != null ?
                new ObjectParameter("MessageSubCategory", messageSubCategory) :
                new ObjectParameter("MessageSubCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SBTSaveStatusUrlInfo", codeParameter, messageParameter, sendToParameter, orgCodeParameter, statusParameter, ticketParameter, noteParameter, uniqueIdParameter, messageCategoryParameter, messageSubCategoryParameter);
        }
    }
}
